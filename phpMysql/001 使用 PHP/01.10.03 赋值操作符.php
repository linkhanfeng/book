<h3>1. 赋值运算返回值</h3>
<pre>
  与其他操作符一样，赋值操作符也会返回一个值。

<?php
    $a = 1; // $a 被设置为 1

      // 与其他操作符一样，赋值操作符也会返回一个值。
    echo $a = 2; // => 1
    echo "<hr>";
    echo $b = 1 + ($a = 3); // => 4
?>

<h3>2. 复合赋值操作符</h3>

  $b += 5;
  等价于 $b = $b + 5;

<h3>3. 前置递增递减 与后置递增递减</h3>
<?php
    $c = 4;
    echo ++$c . '<br>'; // 首先将 $c 加 1， 再将加 1 后的结果赋值给 $c

    $c1 = 4;
    echo $c1++ . '<br>'; // 首先将 $c1 的值返回（即: 返回 4），再将 $c1 的值加 1
    echo $c1;
?>

<h3>4. 引用操作符</h3>
<?php
  $d = 5;
  $d1 = $d; // 首先在内存中产生一个 $d 的副本，然后将这个副本保存到 $d1 中
  $d1++; // 修改 $d1 不会影响 $d的值
  echo $d .' , '. $d1;

  echo '<hr>';

  $d2 = 5;
  $d3 = &$d2; // 引用就像是一个别名,而不是一个指针.
  $d3++; // $d2 与 $d3 指向了同一个内存地址
  echo $d2 .' , '. $d3 .'<br>';

  unset($d3); // 重置 $d3, 并不会改变 $d2的值, 但是可以破坏 $d2 和值 5 在内存中的链接.
  echo $d2 .' , ';
  var_dump( isset($d3) );
?>